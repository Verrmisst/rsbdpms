<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.0.xsd ">

	<!-- 业务组件对象 -->
	<!-- <context:component-scan base-package="service" /> -->

	<!-- 注册一个解析占位符对象 -->
	<bean id="propertyPlaceholder"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location"
			value="classpath:cn/net/inlink/config/db-connect.properties" />
	</bean>



	<!-- 配置DataSource数据源 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:cn/net/inlink/config/db-connect.properties</value>
		</property>
	</bean>

	<bean id="dbcppool" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${dbDriver}" />
		<property name="url" value="${dbUrl}" />
		<property name="username" value="${dbUser}" />
		<property name="password" value="${dbPassword}" />

		<!-- 伸缩性 -->
		<property name="initialSize" value="${initialSize}" />
		<property name="maxActive" value="${maxActive}" />
		<!-- 最大闲置数 -->
		<property name="maxIdle" value="${maxIdle}" />
		<!-- 最小闲置数 -->
		<property name="minIdle" value="${minIdle}" />
		<!-- 连接池连接数据库的最大等待时间(毫秒),超过则报错 -->
		<property name="maxWait" value="${maxWait}" />
		<!--<property name="defaultAutoCommit" value="${db.defaultAutoCommit}"></property> -->
	</bean>

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dbcppool" />
		<property name="configLocation"
			value="classpath:cn/net/inlink/config/mybatis-config.xml"></property>
	</bean>

	<!-- 注册一个bean类,它能创建Mapper对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn/net/inlink/dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 注册service -->
	<bean id="userService" class="cn.net.inlink.service.UserServiceImpl">
		<property name="dao" ref="userDao" />
	</bean>

	<bean id="roleService" class="cn.net.inlink.service.RoleServiceImpl">
		<property name="dao" ref="roleDao" />
	</bean>

	<bean id="staffManaService" class="cn.net.inlink.service.StaffManaServiceImpl">
		<property name="dao" ref="staffManaDao" />
	</bean>
	
	<bean id="pageService" class="cn.net.inlink.service.PageServiceImpl">
		<property name="dao" ref="pageDao" />
	</bean>
	
	<bean id="uploadStaffService" class="cn.net.inlink.service.UploadStaffServiceImpl">
		<property name="dao" ref="uploadDao" />
	</bean>
	
	<bean id="dormManaService" class="cn.net.inlink.service.DormManaServiceImpl">
		<property name="dao" ref="dormManaDao" />
	</bean>
	
	<bean id="staffBorrowService" class="cn.net.inlink.service.StaffBorrowServiceImpl">
		<property name="dao" ref="staffBorrowDao" />
	</bean>
	
	<bean id="staffNotificationService" class="cn.net.inlink.service.StaffNotificationServiceImpl">
		<property name="dao" ref="staffNotificationDao" />
	</bean>
	
	<bean id="blurSearchService" class="cn.net.inlink.service.BlurSearchServiceImpl">
		<property name="dao" ref="blurSearchDao" />
	</bean>


	<!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dbcppool" />

	</bean>
	
	 <!-- 开启注解事务 -->
<!-- 	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
 -->	

	<!-- 配置事务的传播特性 -->
	<bean id="baseTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="edit*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="del*">PROPAGATION_REQUIRED</prop>
				<prop key="cancel*">PROPAGATION_REQUIRED</prop>
				<prop key="*">readOnly</prop>
			</props>
		</property>
	
		
	</bean>

</beans>
